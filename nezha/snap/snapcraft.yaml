name: nezha-kernel
adopt-info: kernel
type: kernel
build-base: core22
summary: An Ubuntu Core kernel for the RISC-V AllWinner Nezha
description: |
  This snap provides the kernel, modules, firmware, and initrd required to
  create an Ubuntu Core image for the RISC-V AllWinner Nezha.

  The kernel and initrd are provided as a singular FIT image file.
  This FIT image includes several other device trees to accomodate the Sipeed Lichee RV and its various additional peripherals.

  ** Note that the license information for this snap is incomplete **
  Do your due diligence to ensure compliance with the licenses of the contents of this snap.

  This snapcraft.yaml and the kernel_riscv64.its file are licensed under CC-BY-SA-4.0

  You can find any and all licenses for the contents of this snap at the following locations:

  kernel:             https://git.launchpad.net/~canonical-kernel/ubuntu/+source/linux-riscv/+git/noble/tree/?h=allwinner-next
  linux-firmware:     https://git.launchpad.net/ubuntu/+source/linux-firmware/tree/?h=applied/ubuntu/noble
  rtl8723ds:          https://git.launchpad.net/ubuntu/+source/licheerv-rtl8723ds-dkms/tree/
  rtl8723ds upstream: https://github.com/lwfinger/rtl8723ds

  Additional licenses can also be found within this snap in the licenses/ top-level directory.

grade: stable
confinement: strict

license: "GPL-2.0 AND GPL-3.0 AND CC-BY-SA-4.0"
issues: https://github.com/canonical/iot-field-kernel-snap/issues
website: https://github.com/canonical/iot-field-kernel-snap/tree/22-riscv64-nezha

architectures:
  - build-on:  [amd64]
    build-for: [riscv64]

# In an ideal universe, this would be all we would have to do. Unfortunately,
# the workaround in the README is required for core22 builds.
package-repositories:
  - type: apt
    components: [main, universe]
    architectures: [riscv64]
    suites: [jammy, jammy-updates]
    key-id: F6ECB3762474EDA9D21B7022871920D1991BC93C
    url: http://ports.ubuntu.com/ubuntu-ports

parts:
  # Trimming any firmware we know a priori to not be needed by the target device
  # can reduce kernel snap size.
  trim-firmware:
    plugin: dump
    source: https://git.launchpad.net/canonical-kernel-snaps
    source-depth: 1
    source-type: git
    stage:
      - trim-firmware
    prime:
      - -*

  kernel:
    plugin: kernel
    after: [trim-firmware]
    source: https://git.launchpad.net/~canonical-kernel/ubuntu/+source/linux-riscv/+git/jammy
    source-type: git
    source-depth: 1
    source-branch: allwinner-5.19-next
    kernel-kconfigflavour: "allwinner"
    kernel-kconfigs:
      - CONFIG_DRM_AMDGPU=n
      - CONFIG_DRM_ARCPGU=n
      - CONFIG_DRM_BOCHS=n
      - CONFIG_DRM_CIRRUS_QEMU=n
      - CONFIG_DRM_GM12U320=n
      - CONFIG_DRM_MGAG200=n
      - CONFIG_DRM_MXSFB=n
      - CONFIG_DRM_NOUVEAU=n
      - CONFIG_DRM_QXL=n
      - CONFIG_DRM_RADEON=n
      - CONFIG_DRM_VIRTIO_GPU=n
      - CONFIG_DRM_VKMS=n
    build-packages:
      - gcc-${CRAFT_ARCH_TRIPLET_BUILD_FOR}
    stage-packages:
      - linux-firmware:${CRAFT_ARCH_BUILD_FOR}
      - wireless-regdb
    override-build: |
      craftctl default

      kver="$(basename "${CRAFT_PART_INSTALL}/lib/modules/"*)"

      # Set the version of the snap to match the kernel version.
      craftctl set version="$kver"

      # Install the relevant license files
      install -Dm644 "${CRAFT_PART_SRC}/LICENSES/preferred/GPL-2.0" \
                     "${CRAFT_PART_INSTALL}/LICENSE"
      install -Dm644 "${CRAFT_PART_SRC}/LICENSES/exceptions/Linux-syscall-note" \
                     "${CRAFT_PART_INSTALL}/LICENSE.exception"

      "${CRAFT_STAGE}/trim-firmware" "${CRAFT_PART_INSTALL}"
    organize:
      LICENSE: licenses/kernel.license
      LICENSE.exception: licenses/kernel.license-exception
      dtbs/allwinner: dtbs/
      rtl_bt/rtl8723d_fw.bin: (component/wlan)/firmware/rtl_bt/rtl8723d_fw.bin
      rtl_bt/rtl8723d_config.bin: (component/wlan)/firmware/rtl_bt/rtl8723d_config.bin
    stage:
      - System.map-*
      - config-*
      - dtbs/sun20i-d1-lichee-rv-86-panel-480p.dtb
      - dtbs/sun20i-d1-lichee-rv-86-panel-720p.dtb
      - dtbs/sun20i-d1-lichee-rv-dock.dtb
      - dtbs/sun20i-d1-lichee-rv.dtb
      - dtbs/sun20i-d1-nezha.dtb
      - kernel.img
      - firmware/
      - lib/
      - licenses/
      - modules/
    prime:
      - -kernel.img

  wlan:
    after: [kernel]
    plugin: nil
    source: https://git.launchpad.net/ubuntu/+source/licheerv-rtl8723ds-dkms
    source-type: git
    source-depth: 1
    source-branch: applied/ubuntu/jammy-updates
    build-packages: [build-essential, dkms]
    override-build: |
      kver="$(basename "${CRAFT_STAGE}/lib/modules/"*)"
      driver_path="lib/modules/${kver}/kernel/drivers/net/wireless"

      make -j${CRAFT_PARALLEL_BUILD_COUNT} \
        ARCH=riscv CROSS_COMPILE=riscv64-linux-gnu- \
        KSRC="${CRAFT_PART_BUILD}/../../kernel/build" \
        modules

      install -Dm644 8723ds.ko "${CRAFT_COMPONENT_WLAN_PRIME}/${driver_path}/8723ds.ko"
    override-stage: |
      kver="$(basename "${CRAFT_STAGE}/lib/modules/"*)"

      craftctl default

      # Regenerate module dependency list
      depmod -a -b "${CRAFT_STAGE}/" "${kver}"
    stage:
      - -8723ds.ko

  # Provide the initrd for Ubuntu Core.
  # The initrd includes important things such as snap-bootstrap which
  # orchestrates the entire Ubuntu Core installation process. The documentation
  # for this tool can be found here:
  # https://github.com/snapcore/snapd/blob/master/cmd/snap-bootstrap/README.md
  initrd:
    plugin: initrd
    after: [kernel, trim-firmware]
    initrd-build-efi-image: true
    initrd-configured-modules: [nls_iso8859-1, sunxi-mmc]
    build-snaps: [core22/latest/stable]
    prime:
      - -kernel.efi-*

components:
  wlan:
    type: kernel-modules
    version: 1.0-0ubuntu0.1
    summary: The Realtek 8723ds WiFi module and firmware
    description: |
      The 8723ds Realtek WiFi kernel module used by the Sipeed LicheeRV. This
      module is useless on the Nezha board which also uses this kernel. To save
      on some small disk space, we package this module separately.
