name: Snap Builds CI

# This workflow is intended to test that each kernel snap can be built with some
# relevant version of snapcraft, with the aim of hopefully catching bugs or
# regressions.
# Please only create AMD64 build-on jobs. If you want non-AMD64 builds, use Launchpad.

# Run the jobs on:
#   1) 12PM UTC weekly on Monday
on:
  schedule:
    - cron: '0 12 * * MON'
  workflow_dispatch:

# In an ideal world, GitHub actions would support anchors in action yaml.
# Luckily, it looks like this may be coming in the next few months:
# https://github.com/actions/runner/issues/1182#issuecomment-2722005293
# TODO: implement anchors. Will save a ton of vertical space.

# Convention:
# jobs:
#   <platform>_<core release>:
#     name: <snapcraft release> job for <core release>/<platform>
#     runs-on: ubuntu-<core release>.04
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           ref: <core release>
#       - name: Setup build environment
#         run: |
#           # Temporary, until kernel+initrd plugins are merged
#           wget https://github.com/canonical/iot-field-kernel-snap/releases/download/temp/snapcraft_8.10.0.post45_amd64.snap
#           sudo snap install --dangerous --classic snapcraft*.snap
#           rm -f snapcraft*.snap
#           # For building the initrd
#           sudo apt install qemu-user-static
#         # Temporary, until kernel+initrd plugins are merged
#       - name: Build <core release>/<platform>
#         id: build
#         env:
#           SNAPCRAFT_UA_TOKEN: ${{ secrets.UA_TOKEN }}
#           SNAPCRAFT_BUILD_INFO: 1
#           SNAPCRAFT_VERBOSITY_LEVEL: verbose
#         run: |
#           cd <platform>
#           sed -i "s/name: /name: ${{ secrets.STORE_PREFIX }}-/" snap/snapcraft.yaml
#           sudo snapcraft --enable-experimental-plugins --destructive-mode
#       - name: Upload <core release>/<platform>
#         uses: snapcore/action-publish@v1
#         env:
#           SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
#         with:
#           snap: ${{ steps.build.outputs.snap }}
#           release: <track>/edge

##########
### 22 ###
##########
jobs:
  nezha_22:
    name: latest/edge job for 22/nezha
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 22
      - name: Setup build environment
        run: |
          wget https://github.com/canonical/iot-field-kernel-snap/releases/download/temp/snapcraft_8.10.0.post45_amd64.snap

          sudo snap install --dangerous --classic snapcraft*.snap
          sudo apt install qemu-user-static

          rm -f snapcraft*.snap
      - name: Build 22/nezha
        id: build
        env:
          SNAPCRAFT_UA_TOKEN: ${{ secrets.UA_TOKEN }}
          SNAPCRAFT_BUILD_INFO: 1
          SNAPCRAFT_VERBOSITY_LEVEL: verbose
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          cd nezha
          sed -i "s/name: /name: ${{ secrets.STORE_PREFIX }}-/" snap/snapcraft.yaml
          sudo snapcraft --enable-experimental-plugins --destructive-mode
      - name: Upload 22/nezha
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: 22/edge

  odroid-hc4_22:
    name: latest/edge job for 22/odroid-hc4
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 22
      - name: Setup build environment
        run: |
          wget https://github.com/canonical/iot-field-kernel-snap/releases/download/temp/snapcraft_8.10.0.post45_amd64.snap

          sudo snap install --dangerous --classic snapcraft*.snap
          sudo apt install qemu-user-static

          rm -f snapcraft*.snap
      - name: Build 22/odroid-hc4
        id: build
        env:
          SNAPCRAFT_UA_TOKEN: ${{ secrets.UA_TOKEN }}
          SNAPCRAFT_BUILD_INFO: 1
          SNAPCRAFT_VERBOSITY_LEVEL: verbose
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          cd odroid-hc4
          sed -i "s/name: /name: ${{ secrets.STORE_PREFIX }}-/" snap/snapcraft.yaml
          sudo snapcraft --enable-experimental-plugins --destructive-mode
      ## Not being maintained...
      - name: Upload 22/odroid-hc4
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: latest/edge

  orangepi-5plus_22:
    name: latest/edge job for 22/orangepi-5plus
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 22
      - name: Setup build environment
        run: |
          wget https://github.com/canonical/iot-field-kernel-snap/releases/download/temp/snapcraft_8.10.0.post45_amd64.snap

          sudo snap install --dangerous --classic snapcraft*.snap
          sudo apt install qemu-user-static

          rm -f snapcraft*.snap
      - name: Build 22/orangepi-5plus
        id: build
        env:
          SNAPCRAFT_UA_TOKEN: ${{ secrets.UA_TOKEN }}
          SNAPCRAFT_BUILD_INFO: 1
          SNAPCRAFT_VERBOSITY_LEVEL: verbose
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          cd orangepi-5plus
          sed -i "s/name: /name: ${{ secrets.STORE_PREFIX }}-/" snap/snapcraft.yaml
          sudo snapcraft --enable-experimental-plugins --destructive-mode
      ## Not being maintained...
      - name: Upload latest/edge
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: latest/edge

  polarfire-icicle_22:
    name: latest/edge job for 22/polarfire-icicle
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 22
      - name: Setup build environment
        run: |
          wget https://github.com/canonical/iot-field-kernel-snap/releases/download/temp/snapcraft_8.10.0.post45_amd64.snap

          sudo snap install --dangerous --classic snapcraft*.snap
          sudo apt install qemu-user-static

          rm -f snapcraft*.snap
      - name: Build 22/polarfire-icicle
        id: build
        env:
          SNAPCRAFT_UA_TOKEN: ${{ secrets.UA_TOKEN }}
          SNAPCRAFT_BUILD_INFO: 1
          SNAPCRAFT_VERBOSITY_LEVEL: verbose
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          cd polarfire-icicle
          sed -i "s/name: /name: ${{ secrets.STORE_PREFIX }}-/" snap/snapcraft.yaml
          sudo snapcraft --enable-experimental-plugins --destructive-mode
      ## Not being maintained...
      - name: Upload 22/polarfire-icicle
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: latest/edge

##########
### 24 ###
##########
  nezha_24:
    name: latest/edge job for 24/nezha
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 24
      - name: Setup build environment
        run: |
          wget https://github.com/canonical/iot-field-kernel-snap/releases/download/temp/snapcraft_8.10.0.post45_amd64.snap

          sudo snap install --dangerous --classic snapcraft*.snap
          sudo apt install qemu-user-static

          rm -f snapcraft*.snap
      - name: Build 24/nezha
        id: build
        env:
          SNAPCRAFT_UA_TOKEN: ${{ secrets.UA_TOKEN }}
          SNAPCRAFT_BUILD_INFO: 1
          SNAPCRAFT_VERBOSITY_LEVEL: verbose
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          cd nezha
          sed -i "s/name: /name: ${{ secrets.STORE_PREFIX }}-/" snap/snapcraft.yaml
          sudo snapcraft --destructive-mode
      - name: Upload 24/nezha
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: 24/edge

  visionfive2_24:
    name: latest/edge job for 24/visionfive2
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 24
      - name: Setup build environment
        run: |
          wget https://github.com/canonical/iot-field-kernel-snap/releases/download/temp/snapcraft_8.10.0.post45_amd64.snap

          sudo snap install --dangerous --classic snapcraft*.snap
          sudo apt install qemu-user-static

          rm -f snapcraft*.snap
      - name: Build 24/visionfive2
        id: build
        env:
          SNAPCRAFT_UA_TOKEN: ${{ secrets.UA_TOKEN }}
          SNAPCRAFT_BUILD_INFO: 1
          SNAPCRAFT_VERBOSITY_LEVEL: verbose
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          cd visionfive2
          sed -i "s/name: /name: ${{ secrets.STORE_PREFIX }}-/" snap/snapcraft.yaml
          sudo snapcraft --destructive-mode
      - name: Upload 24/visionfive2
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          # TODO: get a 24 track
          release: latest/edge
